Filter rows based on a condition:
Sort rows in ascending or descending order:
Join two tables:
inner join 
right join
left join
full join
self join
Aggregate functions (e.g., SUM, AVG, COUNT):
Group rows and apply aggregate functions:
HAVING clause
Subqueries:
Update existing records:


Retrieve the names and salaries of employees who belong to the "Finance" department.

SELECT emp_name,salary,dep_id FROM frontend.employee
WHERE dep_id IN(SELECT dep_id from frontend.department WHERE dep_name='digital')

Calculate the average salary of employees in each department.

SELECT dep_id,avg(salary) AS averageSalary 
FROM frontend.employee
group by dep_id;


Find the employee with the highest salary.

SELECT emp_name,salary
FROM frontend.employee
order by salary DESC
limit 0,1

Determine the total number of employees hired in each year.

SELECT doj,COUNT(id)
FROM frontend.employee
GROUP BY doj;


Retrieve the names and prices of all products with a price greater than $50.


Calculate the total revenue generated by the store.
SELECT sum(price) AS TOTAL_REVENUE
FROM orders;

Find the top 2 customers who spent the most money.

SELECT emp_id,sum(price) AS TOTAL_PRICE
FROM orders
group by emp_ID
order by TOTAL_PRICE DESC	
limit 0,2

Identify the products that have never been ordered.

SELECT p.prod_id,p.prod_name
FROM products p
LEFT JOIN orders o ON p.prod_id=o.prod_id
WHERE o.ord_id IS NULL;

Retrieve the names of students who scored more than 90 in the "Mathematics" course.
SELECT std_id,std_name
FROM students
WHERE subject='maths' AND marks>=90;

Calculate the average grade for each course.


Identify the courses with the highest and lowest average grades.

Find the students who are enrolled in more than 3 courses.

SELECT std_id,COUNT(course_id) AS TOTAL_COURSES
FROM COURSE
GROUP BY std_id
HAVING TOTAL_COURSES >='3'

Retrieve the usernames of users who have more than 1000 followers.


Count the number of posts made by each user.

Find the most liked post.
Determine the average number of comments per post.


Retrieve the names of guests who have booked a room for more than 5 nights.
Calculate the occupancy rate of the hotel.
Find the most popular room type.
Identify the guests who have made multiple bookings

SELECT emp_id,COUNT(bookings_id) AS TOTAL_BOOKINGS
FROM BOOKINGS
GROUP BY emp_id
HAVING TOTAL_BOOKINGS>1
